{% from 'macros/IndexPageMenu.html' import IndexPageMenu %}
{% from 'macros/Divider.html' import Divider %}
{% from 'macros/Dropdown.html' import Dropdown %}
{% from 'macros/ArticleTileIndexPage.html' import ArticleTileIndexPage%}
{% from 'macros/Accordion.html' import Accordion%}
{% from 'macros/WalkThroughDialog.html' import WalkThroughDialog%}
{# {% from 'processingFiles/SBP_category_filtering.jinja' import SBP_Filtering%} #}


{#-Jinja template for home page-#}
{% extends "base.html.jinja" %}

{% block head_title -%}
<title>Index Page SUSE Documentation</title>
{% endblock head_title %}

{% block head_link_css -%}
{{ super() }}
<link rel="stylesheet" type="text/css" href="../styles/indexPageStyles.css">
{% endblock head_link_css -%}

{%if isSBP%}

{% set articlesListSBPCategory = [] %}
{% for article in data %}
{% if category in article.articleSection %}
{% set _ = articlesListSBPCategory.append(article) %}
{% endif %}
{% endfor %}

{% set articlesListSanitisedSBP = [] %}
{% for article in articlesListSBPCategory %}
{% set sanitisedArticle = {} %}
{% set _ = sanitisedArticle.update({'title': article.headline}) %}
{% set _ = sanitisedArticle.update({'description': article.description}) %}
{% set _ = sanitisedArticle.update({'tasks': article.about | selectattr('@type', 'equalto', 'Thing') |
map(attribute='name') | list }) %}
{% set _ = sanitisedArticle.update({'datePublished': article.datePublished[:10]}) %}
{% set _ = sanitisedArticle.update({'dateModified': article.dateModified[:10]}) %}


{% set aboutList = article.about %}
{% set links = {} %}
{% for item in aboutList %}
{% if item["@type"] == "WebPage" %}
{% if "pdf" in item.encodingFormat %}
{% set _ = links.update({'pdf': item.url}) %}
{% elif 'single-html'in item.url %}
{% set _ = links.update({'singleHTML': item.url}) %}
{% else %}
{% set _ = links.update({'html': item.url}) %}
{% endif %}
{% endif %}
{% endfor %}
{%set _ = sanitisedArticle.update({'links': links}) %}

{% set _ = articlesListSanitisedSBP.append(sanitisedArticle) %}

{% endfor %}

{% set articles = articlesListSanitisedSBP | sort(attribute='title')%}

{% set tasksList = [] %}
{% for article in articles %}
{% for task in article.tasks %}
{% if task not in tasksList %}
{% set _ = tasksList.append(task) %}
{% endif %}
{% endfor %}
{% endfor %}
{% set tasksList = tasksList | sort() %}

{% set newestArticles = articles| sort(attribute='dateModified', reverse=true) %}
{% set newest = newestArticles[:8] %}

{% endif %}

{# {{SBPMacro(data,'Storage')}} #}

{%if isProduct%}

{# {% set articlesList = data | selectattr('isPartOf', 'defined')|selectattr('isPartOf.name', 'equalto',
'Products
& Solutions') |
selectattr('mentions', 'defined')
| selectattr('mentions.0.name' | replace('\xa0', ' '), 'equalto', 'SLES for SAP') |
selectattr('mentions.0.softwareVersion', 'equalto', '15 SP6') %} #}

{% set articlesList = data | selectattr('isPartOf', 'defined') | selectattr('isPartOf.name', 'equalto',
'Products & Solutions')|
selectattr('mentions', 'defined')
| selectattr('mentions.0.name', 'equalto', product) |
selectattr('mentions.0.softwareVersion', 'equalto', version)
%}

{# Map the filtered articles to a new list with desired properties #}
{% set articlesListSanitised = [] %}
{% for article in articlesList %}
{% set sanitisedArticle = {} %}
{% set _ = sanitisedArticle.update({'title': article.headline}) %}
{% set _ = sanitisedArticle.update({'description': article.description}) %}
{% set _ = sanitisedArticle.update({'tasks': article.about | selectattr('@type', 'equalto', 'Thing') |
map(attribute='name') | list }) %}
{# {% set _ = sanitisedArticle.update({'datePublished': article.datePublished[:10]}) %} #}
{% set _ = sanitisedArticle.update({'dateModified': article.dateModified[:10]}) %}
{% set aboutList = article.about %}
{% set links = {} %}
{% for item in aboutList %}
{% if item["@type"] == "WebPage" %}
{% if "pdf" in item.encodingFormat %}
{% set _ = links.update({'pdf': item.url}) %}
{% elif 'single-html'in item.url %}
{% set _ = links.update({'singleHTML': item.url}) %}
{% else %}
{% set _ = links.update({'html': item.url}) %}
{% endif %}
{% endif %}
{% endfor %}
{%set _ = sanitisedArticle.update({'links': links}) %}


{% set _ = articlesListSanitised.append(sanitisedArticle) %}

{% endfor %}

{% set articles = articlesListSanitised | sort(attribute='title') %}

{# Fetching task list #}
{% set tasksList = [] %}
{% for article in articles %}
{% for task in article.tasks %}
{% if task not in tasksList %}
{% set _ = tasksList.append(task) %}
{% endif %}
{% endfor %}
{% endfor %}
{% set tasksList = tasksList | sort() %}

{% set newestArticles = articles| sort(attribute='dateModified', reverse=true) %}
{% set newest = newestArticles[:8] %}
{% endif %}

{%if isTRD%}

{% set articlesList = data| selectattr('isPartOf.name', 'equalto', 'Technical Reference Documentation') |
selectattr('affiliatedOrganization', 'defined') |
selectattr('affiliatedOrganization.0.name', 'equalto', partner) %}
{# |selectattr('additionalType','equalto', docType) #}

{# Map the filtered articles to a new list with desired properties #}
{% set articlesListSanitisedTRD = [] %}
{% for article in articlesList %}
{% set sanitisedArticle = {} %}
{% set _ = sanitisedArticle.update({'title': article.headline}) %}
{% set _ = sanitisedArticle.update({'description': article.description}) %}
{% set _ = sanitisedArticle.update({'products': article.mentions | map(attribute='name') | list }) %}
{% set _ = sanitisedArticle.update({'docType': article.additionalType}) %}
{% set _ = sanitisedArticle.update({'datePublished': article.datePublished[:10]}) %}
{% set _ = sanitisedArticle.update({'dateModified': article.dateModified[:10]}) %}

{% set links = {} %}
{% for item in article.about %}
{% if item["@type"] == "WebPage" %}
{% if "pdf" in item.encodingFormat %}
{% set _ = links.update({'pdf': item.url}) %}
{% elif 'single-html'in item.url %}
{% set _ = links.update({'singleHTML': item.url}) %}
{% else %}
{% set _ = links.update({'html': item.url}) %}
{% endif %}
{% endif %}
{% endfor %}
{%set _ = sanitisedArticle.update({'links': links}) %}

{% set _ = articlesListSanitisedTRD.append(sanitisedArticle) %}
{% endfor %}

{% set articles = articlesListSanitisedTRD | sort(attribute='title') %}

{% set docTypeList = [] %}
{% for article in articles %}
{% if article.docType not in docTypeList %}
{% set _ = docTypeList.append(article.docType) %}
{% endif %}
{% endfor %}
{% set docTypeList = docTypeList | sort() %}

{% set docTypeDescriptions ={
'Getting Started':'Guides with basic steps to quickly deploy one layer of the referenced
component of the SUSE portfolio, with pointers to other required elements.',
'Reference Configuration': 'Guides with basic steps to deploy the layered stack of components from both SUSE and its
partners. A fundament to demonstrating a specific, tested configuration of components.',
'Reference Implementation': 'Guides with basic steps to deploy the highlighted components of the SUSE portfolio,
including pointers to other layers and elements. An introductory approach and a basis for other tested variations.',
'Enterprise Architecture': ''}%}

{# Fetching product list #}
{% set productsList = [] %}
{% for article in articles %}
{% for product in article.products %}
{% if product not in productsList %}
{% set _ = productsList.append(product) %}
{% endif %}
{% endfor %}
{% endfor %}
{% set productsList = productsList | sort() %}

{% set newestArticles = articles| sort(attribute='dateModified', reverse=true) %}
{% set newest = newestArticles[:8] %}

{% endif %}


{%if isSmartDocs%}

{% set articlesList = data| selectattr('headline','defined')| selectattr('headline', 'ne', '') %}

{# Map the filtered articles to a new list with desired properties #}
{% set articlesListSanitised = [] %}
{% for article in articlesList %}
{% set sanitisedArticle = {} %}
{% set _ = sanitisedArticle.update({'title': article.headline}) %}
{% set _ = sanitisedArticle.update({'description': article.description}) %}
{% set _ = sanitisedArticle.update({'tasks': article.about | selectattr('@type', 'equalto', 'Thing') |
map(attribute='name') | list }) %}
{% set _ = sanitisedArticle.update({'docType': article.additionalType}) %}
{# {% set _ = sanitisedArticle.update({'datePublished': article.datePublished[:10]}) %} #}
{% set _ = sanitisedArticle.update({'dateModified': article.dateModified[:10]}) %}

{% set links = {} %}
{% for item in article.about %}
{% if item["@type"] == "WebPage" %}
{% if "pdf" in item.encodingFormat %}
{% set _ = links.update({'pdf': item.url}) %}
{% elif 'single-html'in item.url %}
{% set _ = links.update({'singleHTML': item.url}) %}
{% else %}
{% set _ = links.update({'html': item.url}) %}
{% endif %}
{% endif %}
{% endfor %}
{%set _ = sanitisedArticle.update({'links': links}) %}

{% set _ = articlesListSanitised.append(sanitisedArticle) %}
{% endfor %}

{% set articles = articlesListSanitised | sort(attribute='title') %}

{# Fetching task list #}
{% set tasksList = [] %}
{% for article in articles %}
{% for task in article.tasks %}
{% if task not in tasksList %}
{% set _ = tasksList.append(task) %}
{% endif %}
{% endfor %}
{% endfor %}
{% set tasksList = tasksList | sort() %}

{% set newestArticles = articles| sort(attribute='dateModified', reverse=true) %}
{% set newest = newestArticles[:8] %}

{% endif %}

{% block body_main%}
<div class="main-container indexPage">
    <div class="breadcrumbs-bar">
        <a href="{% if isSBP %} /?tab=sbp {% elif isTRD %} /?tab=trd {% else %}  /?tab=products {% endif%}"
            onclick="onBackToHome(event)"><i class="fa fa-arrow-left" aria-hidden="true"></i>
            Home Page</a>
    </div>
    {# <h1>{{title}}</h1> #}
    {% if isSBP%}
    <h1>{{category}}</h1>
    {%endif%}
    {% if isProduct%}
    <h1>{{product + ' ' +version}}</h1>
    {%endif%}
    {% if isTRD%}
    <h1>{{partner}}</h1>
    {%endif%}
    {% if isSmartDocs%}
    <h1>SUSE Linux Enterprise 16</h1>
    {%endif%}

    <p>
        {% if description%}
        {{description}}
        {%endif%}
    </p>
    {{Divider()}}
    {{IndexPageMenu(isTRD)}}

    <div id="allArticles-content" class="tab-content active-content">
        <form method="get" class="formHeader" {% if isTRD %} onsubmit="onFilterTRDAllSections(event)" {% else %}
            onsubmit="onFilterAllArticlesList(event)" {% endif %}>
            <input type="search" id="all_articles_filter" class="searchInput filterInput" size="80"
                placeholder="Filter the list by article title" {% if isTRD %} oninput="onFilterTRDAllSections(event)" {%
                else %} oninput="onFilterAllArticlesList(event)" {% endif %} />
            <button type="submit" value="Filter" title="Filter" class="searchButton filterButton">
                <i class="fa fa-filter"></i>
            </button>
        </form>

        <div>
            {%if isTRD%}
            {% for docType in docTypeList %}
            <div class="section">
                <label class="section-header">{{docType}}</label>
                <p>{{docTypeDescriptions[docType]}}</p>
                <div>
                    {% for article in articles %}
                    {% if article.docType == docType %}
                    <div class="articleRow">
                        <div class="articleText" data-article-link="{{article.links.html}}"
                            onclick="onArticleClick(event)">
                            <a class="articleTitle" href={{article.links.html}}>
                                {# Article Title {{ loop.index }} : {{ article.title }} #}
                                {{article.title}}
                            </a>
                            <p class="articleDescription">{{article.description}}</p>
                        </div>
                        </p>
                        <label>{{article.dateModified}}</label>
                        {{Dropdown(article.links)}}
                    </div>

                    {% endif %}
                    {% endfor %}
                </div>
            </div>
            {% endfor %}
            <p class="no-match-text">No matching articles found</p>
            {% else %}

            {% for article in articles %}
            <div class="articleRow">
                <div class="articleText" data-article-link="{{article.links.html}}" onclick="onArticleClick(event)">
                    <a class="articleTitle" href={{article.links.html}}>
                        {# Article Title {{ loop.index }} : {{ article.title }} #}
                        {{article.title}}
                    </a>
                    <p class="articleDescription">{{article.description}}</p>
                </div>
                <label>{{article.dateModified}}</label>
                {{Dropdown(article.links)}}
            </div>
            {% endfor %}
            <p class="no-match-text">No matching articles found</p>
            {% endif %}
        </div>
    </div>

    <div id="newest-content" class="tab-content">
        <div class="articlesContainerIP">
            {% for article in newest %}
            {{ ArticleTileIndexPage(articleData=article) }}
            {% endfor %}
        </div>
    </div>

    <div id="groupedArticles-content" class="tab-content">
        <div class="groupedAriclesHeader">
            <label>
                {% if not isTRD %}
                Explore the articles based on the action you want to perform
                {% endif %}

                {% if isTRD%}
                Explore articles filtered by products
                {% endif %}
            </label>
            <button class="expandAllButton active" onclick="onPressExpandAll(event)">Expand all</button>
            <button class="collapseAllButton" onclick="onPressCollapseAll(event)">Collapse all</button>
        </div>
        <div>

            {% if not isTRD %}
            {% for task in tasksList %}
            {# {% set grouped_articles = articles|selectattr('task', 'equalto', task) %} #}
            {% set grouped_articles = [] %}
            {% for article in articles %}
            {% if article.tasks and task in article.tasks %}
            {% set _ = grouped_articles.append(article) %}
            {% endif %}
            {% endfor %}
            <div>
                {{Accordion(title=task, articleList = grouped_articles)}}
            </div>
            {% endfor %}
            {% endif %}

            {% if isTRD%}
            {% for product in productsList %}

            {% set grouped_articles = [] %}
            {% for article in articles %}
            {% if article.products and product in article.products %}
            {% set _ = grouped_articles.append(article) %}
            {% endif %}
            {% endfor %}
            <div>
                {{Accordion(title=product, articleList = grouped_articles)}}
            </div>
            {% endfor %}
            {% endif %}

        </div>
    </div>
    {{WalkThroughDialog()}}
</div>

{%endblock body_main%}

{% block after_body_scripts %}
{{ super() }}
<script src="../JS/indexPages.js"></script>
<script src="../JS/walkThrough.js"></script>
{% endblock after_body_scripts -%}